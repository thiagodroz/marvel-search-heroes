@import 'constants';

// Mixins
@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
  @each $property in $properties {
    #{$property}: em(strip-unit($min-value));
  }

  @media (min-width: em(strip-unit($min-vw))) {
    @each $property in $properties {
      #{$property}: calc(
        #{$min-value} +
          #{strip-unit($max-value - $min-value)} *
          (100vw - #{$min-vw}) /
          #{strip-unit($max-vw - $min-vw)}
      );
    }
  }

  @media (min-width: em(strip-unit($max-vw))) {
    @each $property in $properties {
      #{$property}: em(strip-unit($max-value));
    }
  }
}

@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == 'string',
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error "No value found for `#{$breakpoint}`. " + "Please make sure it is defined in `$breakpoints` map.";
  }
}
